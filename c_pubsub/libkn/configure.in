dnl Process this file with autoconf to make a configure script.

AC_REVISION($Revision: 1.2 $)
#
# autoconf build configuration for libkn
# Wilfredo Sanchez
#
AC_INIT(kn_base.c)
AC_PREREQ(2.13)
AC_CONFIG_HEADER(kn_config.h)
AC_CONFIG_AUX_DIR(buildconf)

VERSION=1.3.7
AC_SUBST(VERSION)
AC_DEFINE_UNQUOTED(VERSION, "${VERSION}")

AC_PROG_MAKE_SET

AC_CANONICAL_SYSTEM

dnl Options:

AC_ARG_ENABLE(debug, 
[  --enable-debug 		enable debug build], debug=yes, debug=no)

openssldir=/usr/local/ssl
  LIBCRYPT=""
    LIBSSL=""

AC_ARG_WITH(ssl,
[  --with-ssl[=DIR]		Use OpenSSL to support HTTPS urls.  DIR
				defaults to /usr/local/ssl],
[
    if test "${withval}" != "no"; then
        if test "${withval}" != "yes"; then
             openssldir="${withval}"
        fi
    else
        openssldir=""
    fi
])

if test -d "${openssldir}" ; then
    AC_MSG_RESULT(Using OpenSSL in ${openssldir})
        LIBS="${LIBS} -L${openssldir}/lib -L${openssldir} -lssl -lcrypto"
    CPPFLAGS="${CPPFLAGS} -I${openssldir}/include"
    if [ -f "${openssldir}/lib/libcrypto.a" ]; then LIBCRYPT="${openssldir}/lib/libcrypto.a"; fi
    if [ -f "${openssldir}/lib/libssl.a"    ]; then   LIBSSL="${openssldir}/lib/libssl.a"   ; fi
fi

dnl Checks for programs:

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
dnl AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

dnl AC_CHECK_PROGS(INSTALL, install, \$(top_srcdir)/buildconf/install-sh)
INSTALL='$(top_srcdir)/buildconf/install-sh'
AC_SUBST(INSTALL)
AC_CHECK_PROGS(PERL,           perl,           :)
AC_CHECK_PROGS(HEADERDOC2HTML, headerdoc2html, :)

# For prng_cmds
AC_CHECK_PROGS(PROG_LS,       ls      )
AC_CHECK_PROGS(PROG_NETSTAT,  netstat )
AC_CHECK_PROGS(PROG_ARP,      arp     )
AC_CHECK_PROGS(PROG_IFCONFIG, ifconfig)
AC_CHECK_PROGS(PROG_PS,       ps      )
AC_CHECK_PROGS(PROG_WHO,      who     )
AC_CHECK_PROGS(PROG_LAST,     last    )
AC_CHECK_PROGS(PROG_LASTLOG,  lastlog )
AC_CHECK_PROGS(PROG_DF,       df      )
AC_CHECK_PROGS(PROG_VMSTAT,   vmstat  )
AC_CHECK_PROGS(PROG_UPTIME,   uptime  )
AC_CHECK_PROGS(PROG_IPCS,     ipcs    )
AC_CHECK_PROGS(PROG_TAIL,     tail    )

dnl Checks for libraries:

AC_CHECK_LIB(socket, socket         )
AC_CHECK_LIB(nsl,    gethostbyname  )

if test "x${openssldir}" != "x"; then
    AC_CHECK_LIB(crypto, SSLeay         )
    AC_CHECK_LIB(ssl,    SSL_get_version)
fi

# On NeXT/Darwin systems, libMallocDebug is useful for debugging malloc bugs.
if test "${debug}" = "yes"; then
    AC_CHECK_LIB(MallocDebug, mallocdebug_catch_exception_raise)
fi

dnl Checks for header files:

AC_CHECK_HEADERS(getopt.h)

if test "x${openssldir}" != "x"; then
    AC_CHECK_HEADERS(openssl/ssl.h)
fi

dnl Checks for typedefs, structures, and compiler characteristics:

AC_C_CONST
AC_TYPE_SIZE_T

   lib_ext=.a
 shlib_ext=.so
module_ext=.so

          LIBKN='$(LIBKN_STATIC)'
  LDFLAGS_SHLIB=
RUN_ENVIRONMENT='LD_LIBRARY_PATH=.'

AC_MSG_CHECKING(for dyld)
if test -x /usr/lib/dyld; then
     shlib_ext=.dylib
    module_ext=.bundle

              LIBKN='$(LIBKN_DYNAMIC)'
      LDFLAGS_SHLIB="${LDFLAGS} -dynamiclib -install_name \$(libdir)/\$(LIBKN_DYNAMIC)"
    RUN_ENVIRONMENT='DYLD_LIBRARY_PATH=.'

    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
fi

dnl AC_MSG_CHECKING(for Solaris linker)
dnl if test -x /usr/lib/ld.so; then
dnl             LIBKN='$(LIBKN_DYNAMIC)'
dnl           LDFLAGS="$LDFLAGS       '-Wl,-R\$(libdir)'"
dnl     LDFLAGS_SHLIB="$LDFLAGS_SHLIB '-Wl,-R \$(libdir)' -G"
dnl 
dnl     AC_MSG_RESULT(yes)
dnl else
dnl     AC_MSG_RESULT(no)
dnl fi

AC_SUBST(lib_ext)
AC_SUBST(shlib_ext)
AC_SUBST(LIBKN)
AC_SUBST(LIBCRYPT)
AC_SUBST(LIBSSL)
AC_SUBST(LDFLAGS_SHLIB)
AC_SUBST(RUN_ENVIRONMENT)

# Defaults are for gcc
if test "${debug}" = "yes"; then
        C_OPT_FLAGS="-O0"
      C_DEBUG_FLAGS="-g"
    CPP_DEBUG_FLAGS="-DDEBUG"
else
        C_OPT_FLAGS="-O3"
      C_DEBUG_FLAGS=""
    CPP_DEBUG_FLAGS=""
fi

C_WARN_FLAGS="-Wall -Werror"
    CC_FLAGS="-pipe"
      CFLAGS=""
	CXXFLAGS=""

# Not gcc; select options based on OS
# (On the assumption that the system compiler is in use.)
if test "${ac_cv_prog_gcc}" = "no"; then
    case "${host}"  in
      *-*-solaris*)
        if test "${debug}" = "yes"; then
              C_OPT_FLAGS="-xO1"
           C_DEBUG_FLAGS="-DDEBUG -g"
        else
              C_OPT_FLAGS="-fast"
           C_DEBUG_FLAGS=""
        fi
        C_WARN_FLAGS="-erroff=%none"
            CC_FLAGS="-KPIC -mt"
        ;;
      *)
        # Unknown compiler
          C_OPT_FLAGS=""
         C_WARN_FLAGS=""
             CC_FLAGS=""
        C_DEBUG_FLAGS=""
        ;;
    esac
fi

AC_SUBST(C_OPT_FLAGS)
AC_SUBST(C_DEBUG_FLAGS)
AC_SUBST(CPP_DEBUG_FLAGS)
AC_SUBST(C_WARN_FLAGS)
AC_SUBST(CC_FLAGS)

dnl Checks for library functions:

dnl AC_CHECK_FUNCS(select socket)

dnl For entropy.c:
AC_CHECK_FUNCS(clock getrusage)

dnl Generate output:

AC_OUTPUT([
    buildconf/common.mk
    Makefile
    docs/Makefile
    prng_cmds
])
