---------------------------------
mod_pubsub Release February, 2003
---------------------------------

Installing the mod_pubsub release is simple if you already have
experience configuring and running web servers.  You'll need a
web server with which to run the pubsub engine -- instructions for
configuring Apache 1.3, assuming you have root on the web server,
are below.  Other web servers may work but have not been tested
with this release.


------------
Installation
------------

0.  You need Perl 5 or higher to be able to use this distribution;
we've run it recently with 5.6.1, but it should probably still work
with 5.005.  You will also need a C compiler.


1.  You need to install the libwww-perl collection for Perl 5.  This 
is a set of Perl modules that provide a nice API for HTTP functions.
If your system doesn't have a package management system like rpm, dpkg,
or ppm, we strongly recommend that you use CPAN.pm, which will fetch and
install all dependencies for you.  CPAN.pm may already be installed on
your system; or learn more and get it at http://www.cpan.org/ .

   cpan install Bundle::LWP


2.  Now, if you don't already have Apache installed, install it.
We recommend that you enable dynamic shared object support during
configuration (see step 3 below).  This will make it easier to also use
other Apache modules and is no more difficult to build and use.

If your system doesn't have a package management system, you can compile
and install Apache as follows:

   tar -zxvf apache_1.3.x.tar.gz
   cd apache_1.3.x
   ./configure --enable-module=so
   make
   make install


3.  Now, you need to install the Apache Perl module, mod_perl
( http://perl.apache.org/ ).  We recommend that you do so as a dynamic
shared object.

If your system doesn't have a package management system, you can compile
and install mod_perl as follows.

   tar -zxvf mod_perl-1.xx.tar.gz
   cd mod_perl-1.xx
   perl Makefile.PL USE_APXS=1 WITH_APXS=/path/to/apache/bin/apxs EVERYTHING=1
   make
   make test
   make install

Install the module, and make sure there's a line in apache/conf/httpd.conf
giving the correct path to where you've installed it.  On my Debian system,
that line looks like this:

   LoadModule perl_module /usr/lib/apache/1.3/mod_perl.so

On other systems, the module may be in somewhere like
/usr/lib/apache/1.3/libexec/libperl.so .


4.  Extract the mod_pubsub tar file under your Apache document root.  It
will create a directory named mod_pubsub.


5.  Configure your Apache server to allow scripts in mod_pubsub/cgi-bin
to be parsed by mod_perl, and to alias the URL "/kn" to pubsub.cgi.
You can do this by adding lines like the following to httpd.conf.
(You may need to adjust the filenames for your Apache document root.)

    <Directory /var/www/mod_pubsub/cgi-bin>
      <Files *.cgi>
        SetHandler perl-script
        PerlHandler Apache::Registry
        PerlSendHeader On
      </Files>
    </Directory>
    Alias /kn /var/www/mod_pubsub/cgi-bin/pubsub.cgi


6.  You need to create a subdirectory called mod_pubsub/kn_events and
make it writable by the user that will be running the event router code,
typically "nobody", "httpd", or "www-data".  We recommend that you do
this by changing the ownership of this directory to that user; as root:

   cd mod_pubsub
   mkdir kn_events
   chown httpd kn_events

If you don't do this, none of the apps will work, the test suite will
fail, your server error log will rapidly fill with "Uncaught
exception" messages, and apps run with debugging turned on will
display "500 Internal Server Error" messages.


7. Now try testing your mod_pubsub server:

   http://localhost/mod_pubsub/cgi-bin/pubsub_test.cgi

You should see a list of tests.  All 55 tests should say "OK", with the
possible exception of the "replay" tests, which are flaky.

NOTE: This will fail if you have required HTTP authentication (as
described below.) To make it work, you should append a valid HTTP
username and password to the URL in index.html:

   http://localhost/mod_pubsub/cgi-bin/kn_test.cgi?user=knguest&password=knguest

Be aware that this will use up about 10MB of disk space every time you
run it.


8.  Try viewing a test app in kn_apps:

   http://localhost/mod_pubsub/kn_apps/chat2/index.html?kn_debug

You should see 4 frame windows.  The small one at lower-left should be
red and say "200 Watching topic".  The small one at lower-right should be
yellow.  The top frame window should be blank and beige.  You should be
able to type messages in the form and see them in the top frame.

If you are not seeing what you expected at this point, see the
Troubleshooting section below.


9.  At this point, all the Dynamic HTML apps listed in the index should
work.  However, chatroom, stocksoap, and vote determine usernames from
HTTP authentication; to take advantage of this (so not everybody is
"Anonymous User") requires configuring Apache to require password
authentication for access to the mod_pubsub instance.  You can do this
by adding something like the following to your Apache httpd.conf.
(As before, you may need to adjust paths for your system.)

    <Directory /var/www/mod_pubsub>
        AuthType Basic
        AuthName "knownow-auth"
        AuthUserFile /var/www/mod_pubsub/sample.passwd
        Require valid-user
    </Directory>

WARNING: The included sample.passwd file contains a username and
password entry for user 'knguest' with the password 'knguest'.


---------------
Troubleshooting
---------------


Not Found error (The requested URL /kn was not found on this server)

  Perhaps the Alias directive contains an error, or you unpacked the
distribution somewhere other than your document root, or you typoed
the URL.


500 Internal Server Error

  Look at the end of Apache's error_log (by default, usually
/var/log/httpd/error_log, but web server setups vary a lot) for an
error message.  If mod_pubsub complains that files or directories in
kn_events don't exist, maybe it doesn't have permission to create them;
try changing the ownership of the kn_events directory:

  cd /var/www/mod_pubsub
  chown -R httpd kn_events  (your web server may run as a different user,
                             e.g. nobody or www-data instead of httpd)


You can see Perl source when you view test apps

  Apache should be running these with mod_perl.  Perhaps Apache hasn't
loaded mod_perl (the PerlHandler directive above should give you an error
message in error_log, and keep Apache from starting, if that's the case)
or mod_perl doesn't handle the cgi-bin directory in which mod_pubsub
has been installed.  Perhaps the <Directory> directive above has the
wrong path?


--------------------
Setting Up Newsfeeds
--------------------

The newsticker app works fine when set up as above, but there's no news
for it to display; you'll need to run a newsfeed script.  There's a
simple one provided in mod_pubsub/kn_sense/rss.plx; you can run it as
follows:

   cd mod_pubsub/kn_sense
   ./rss.plx -url http://localhost/mod_pubsub/cgi-bin/kn.cgi

This fetches a large number of RSS files and posts their contents as
stories to the server; when you do this, you should start seeing
headlines show up in NewsTicker almost immediately.

It will eventually finish; if you want a continuous newsfeed, you
should run rss.plx periodically.


--------------------
For More Information
--------------------

Read TODO to see all the things we want to add and improve.
Read README for a list of credits.

And: Join the mailing lists to work with the community on making this
project much better.  http://mod-pubsub.sourceforge.net/
