From: Jos Yule, http://www.theorganization.net/
$Id: README,v 1.4 2003/07/22 00:50:09 ifindkarma Exp $

I've been working (slowly) on the Flash PubSub Lib.
This is what i've got so far.

Two new classes:

The first is an extension of the XMLSocket object. It has some nice
features, like queueing send requests. It's a "0.1" release, so there
are still things that are going to change. This is the class that
connects, sends and receives data from the PubSub Server.

Second, I've built a helper PubSub data class, which is used to
construct the messages you'd send to the server.

The main PubSub class has yet to be built. I'm working on parsing of the
received data now, which is what the class will be responsible for (and
persistence, and... etc etc).

Check it out, let me know what you think. Work goes forward!

-- jos



R 0.1 Notes:

- pubsubSocket and pubsubData class's are in a working state.
- Parsing of received data is missing.
- The "main" pubsub class is not done (this is where the data parsing will
be done, i think).
- I've got concerns about how when you send any data, other then a 'watch',
the socket is always closed after. Its a pain, and resource intensive to
have to re-connect for every data send. this may be another place to look to
the server to implement a "long term" socket connection when using Flash. 



For questions and comments, see

   mod-pubsub-developer@lists.sourceforge.net
   http://mod-pubsub.sf.net/

Thanks!



Additional notes from Scott follow...

-----Original Message-----
From: Scott Andrew LePera [mailto:scott@scottandrew.com]
Sent: Friday, July 18, 2003 8:12 AM
To: mod-pubsub-developer@lists.sourceforge.net
Subject: [Mod-pubsub-developer] Safari clues and Flash pubsub

Hey all,

I actually got around to tinkering with the new tarball last night. I'm 
happy to report that python_pubsub seems to run just fine on the Python 
2.2 install that comes with Mac OS X 10.2.

I spent some time trying to track down the source of the Safari glitch 
we've been seeing. It looks like the onTunnelStatus callback in 
pubsub.js is not being called, as we suspected. The tunnel frame passes 
the isReady check and the connector has a valid handle to it, so it's 
not a frame access problem AFAICT.

I also messed around with hooking into python_pubsub from ActionScript 
(Flash). I don't know if Jos is still on this list (Hello, Jos? Do you 
still have your Flash connector code lying around somewhere?), but I was 
able to confirm his finding that the Flash XMLSocket object works fine 
as a tunnel manager, and the new "flash" wire format works great.

The remaining problem is that XMLSocket still only gets us ports 1024 
and above. I tried using the new wire format on the other Flash objects 
that support HTTP on :80 (like the XML and LoadVars objects), and while 
the new format allows their onLoad handlers to be invoked (a step 
forward), there's still no way to access the data returned from the 
server. The XMLSocket is specifically designed for persistent 
connections and looks for the null byte to fire its handlers; I fear 
that these other objects may be listening for an actual Connection:close 
before making any response data available.

That said, it looks like we could easily create a pubsub_actionscript 
library right now, just restricted to ports 1024 and up. That wouldn't 
be entirely bad.

scottandrew

-- 
Scott Andrew LePera
Scott Andrew and the Walkingbirds
Lo-fi DIY acoustic pop and weirdo country thing
scott@scottandrew.com
http://www.scottandrew.com



-----Original Message-----
From: jos [mailto:hyakugei@theorganization.net]
Sent: Friday, July 18, 2003 10:42 AM
To: Adam Rifkin

I did some experiments along the lines that Scott mentions. It seems 
that the LoadVars and LoadXML objects, which work at sub-port 1024, will 
not work with the presistant pubsub connection. I had a experimental 
version that used the XMLsocket object for the incoming data, and just 
used the LoadVars to send data.

j

