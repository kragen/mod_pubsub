-------------------------------------
High-level items on the "to do" list.
-------------------------------------
$Id: TODO,v 1.13 2003/04/30 22:50:08 ifindkarma Exp $

 0. Fix kn_apps/kn_lib/cookie_auth.js so that it properly escapes userids.

 1. Modify the Perl server and the Python server to not send
    so many flush spaces when writing simple response format.
    This will make our simple wire format less chatty.

 2. We have an initial Python PubSub Client in python_pubsub/pubsublib.py
    that has publish, subscribe, and unsubscribe.  This still needs a
    test suite and several other things; see python_pubsub/TODO .

 3. PubSub/ModPubSub.pm and pubsub.py should be less lazy about
    detecting closed sessions.  Bring active presence detection to
    mod_pubsub. Do this by writing an external cleanup.py program.

 4. PubSub/ModPubSub.pm and pubsub_test.cgi still expect
    other things to live near PubSub/ModPubSub.pm in URL-space. Fix this.

 5. Create an installer for cxx_pubsub/LibKN so Windows developers have
    a pre-compiled build they can use easily.

 6. Compile pubsub.py into a pubsub.exe that Windows folks can run easily.
    Then we'll have a "Windows PubSub Server".  (Alternatively, figure out
    how to use Jython to compile pubsub.py and pubsublib.py into Java
    bytecodes so we can run them within a JVM.)

 7. Build c_pubsub/libkn on cygwin.

 8. Create a java_pubsub client library.  Greg suggests creating a clean
    Java API usable in any type of Java client (app server based or not)
    and then layer a JMS interface on top of that.  This makes it easier to
    develop and easier to maintain over time while covering all the bases.

 9. Make Tunnel.pm event-driven.
    Unify the Perl PubSub client and server and
    submit the PubSub perl package to CPAN.

10. While we're at it, clean up any broken and/or ugly kn_apps.
    "replay" is a particularly useful kn_app that is broken.

11. Get push_manager working and clean up its directory.

12. Build an Apache log sensor and use that to create a
    "webmaster's dashboard" application.

13. Get "Pocket NOC" application that monitors machines
    working to create a "sysadmin's dashboard" application.
    (Update 3/2003: kn_apps/sitewatch is a first-pass at this.
    It needs to be improved significantly, perhaps using
    kn_sense/apache_logfile.sh .)

14. Write a Jabber gateway using mod_pubsub.  And/or
    write an (all-DHTML) IM client application using mod_pubsub.

15. Get Pushlets working with mod_pubsub.

16. Get chess application from http://cvs.developer.knownow.com/ working.

17. Start a Wiki for this project.
    (?As part of the REST Wiki?
    http://internet.conveyor.com/RESTwiki/moin.cgi/ )

18. doxygen comments.  Heck, more documentation all around!
    Flesh out mod_pubsub/kn_docs/design_notes/...

19. Revamp RSS Support because kn_sense/rss is an awful hack.
    Use Jeff Barr's wonderful http://www.syndic8.com/ tools.
    (Update 3/2003: cxx_pubsub contains a Windows RSS-sensing tool.)

20. Improvements to python_pubsub
    A. "depth:" header in pubsub.py; modify topic & tree kn_apps to use it
    B. bridge.py bridging application
    C. auth in pubsub.py
    D. ulimit in pubsub.py
    E. off-host routes in pubsub.py
    F. kn_content_transform in pubsub.py
    G. expire_events.py
    H. pubsub.py watchdog
    I. pubsub.py stats
    J. kn_apps/sitewatch2 : watch stats and notify if down
       i. browser-based
       ii. watches stats
       iii. on two routers
       iv. emails if down
       v. depends on A, B, C, D, G, H, and I

21. An application that uses Amazon Web Services

22. An application that uses httptop from O'Reilly's _Linux Hacks_ book
